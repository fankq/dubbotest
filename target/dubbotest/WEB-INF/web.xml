<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
  <display-name>OAdemo</display-name>

  <!-- log4j配置，文件路径，因为是跟随项目启动 -->
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>
  <!-- 配置log4j.xml变量，如果需要动态的就使用下面方式，使用方法${name} -->
  <context-param>
    <param-name>controller</param-name>
    <param-value>controller-log</param-value>
  </context-param>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring/spring-*.xml</param-value>
  </context-param>
  <!--
    <context-param>
      <param-name>log4jConfigLocation</param-name>
      <param-value>classpath:log4j.properties</param-value>
    </context-param>-->
  <!-- 编码过滤器 -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>

  <filter>
    <filter-name>hiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>


  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>hiddenHttpMethodFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!--shiro权限过滤-->
  <!--  <filter>
      <filter-name>shiroFilter</filter-name>
      <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
      <init-param>
        <param-name>targetFilterLifecycle</param-name>
        <param-value>true</param-value>
      </init-param>
    </filter>
    <filter-mapping>
      <filter-name>shiroFilter</filter-name>
      <url-pattern>/*</url-pattern>&lt;!&ndash;默认拦截所有请求&ndash;&gt;
    </filter-mapping>-->

  <jsp-config>
    <jsp-property-group>
      <url-pattern>*.jsp</url-pattern>
      <el-ignored>false</el-ignored>
      <!--不能在页面使用java脚本-->
      <scripting-invalid>true</scripting-invalid>
      <!--
            <include-prelude>/WEB-INF/jsp/taglib.jsp</include-prelude>
      -->
    </jsp-property-group>
  </jsp-config>
  <!-- spring监听器 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- 防止spring内存溢出监听器，比如quartz -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <context-param>
    <param-name>loggingLevel</param-name>
    <param-value>info</param-value>
  </context-param>
  <!-- 加载log4j配置文件 -->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <!--配置DispatcherServlet -->
  <servlet>
    <servlet-name>spring-dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 配置SpringMVC需要加载的配置文件 spring-xxx.xml -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/spring-web.xml</param-value>
    </init-param>
    <!--在servlet的配置中 <load-on-startup>5</load-on-startup>是标记容器是否在启动的时候就加在这个servlet当值为0或者大于0时 表示容器在应用启动的时候就加在他正数值越小 启动的优先级别越高-->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!-- 编码过滤器 -->

  <servlet-mapping>
    <servlet-name>spring-dispatcher</servlet-name>
    <!--默认匹配所有的请求 -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!--welcome pages-->
  <welcome-file-list>
    <welcome-file>loginFrom</welcome-file>
  </welcome-file-list>

  <!-- session配置 -->
  <session-config>
    <session-timeout>15</session-timeout>
  </session-config>
<!--
  <error-page>
    <exception-type>java.lang.Exception</exception-type>
    <location>/error/error_500</location>
  </error-page>

  <error-page>
    <error-code>404</error-code>
    <location>/error/404</location>
  </error-page>
  <error-page>
    <error-code>405</error-code>
    <location>/error/error_500</location>
  </error-page>-->
  <!--<error-page>
     <error-code>500</error-code>
     <location>/error/error_500</location>
   </error-page>
   <error-page>
     <error-code>503</error-code>
     <location>/error/error_500</location>
   </error-page>
   <error-page>
     <exception-type>java.lang.NullPointException</exception-type>
     <location>/error/error_500</location>
   </error-page>-->
</web-app>